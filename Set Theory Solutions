{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "f148d285-761b-443f-bdcd-45c2eb46623a",
   "metadata": {},
   "source": [
    "# 1. Proving Identities"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "86fefbe7-9d11-443e-be93-83f0c614c7a4",
   "metadata": {},
   "source": [
    "Given: $A$ and $B$ are sets, $\\exists x$ such that $(x \\in A \\land x \\in B)$.\n",
    "\n",
    "### 1. $A \\setminus B = A \\cap B^c$\n",
    "\n",
    "**Proof:**\n",
    "\n",
    "For the first inclusion, assume $x \\in A \\setminus B$. This means $x \\in A$ and $x \\notin B$. Since $x \\in A$ and $x$ is not in $B$, $x$ must be in $A \\cap B^c$. So, the first inclusion is proved.\n",
    "\n",
    "For the second inclusion, assume $x \\in A \\cap B^c$. This means $x \\in A$ and $x \\notin B$. Since $x$ is not in $B$, $x \\in A \\setminus B$. So, the second inclusion is also proved.\n",
    "\n",
    "Therefore, $A \\setminus B = A \\cap B^c$.\n",
    "\n",
    "### 2. $B = (B \\cap A) \\cup (B \\cap A^c)$\n",
    "\n",
    "**Proof:**\n",
    "\n",
    "This can be proven using the distributive law of set theory.\n",
    "\n",
    "We know that $(B \\cap A) \\cup (B \\cap A^c)$ is the union of two sets: one containing elements in both $B$ and $A$, and the other containing elements in both $B$ and $A^c$.\n",
    "\n",
    "Any element in $B$ is either in $A$ or in $A^c$. So, it covers all elements in $B$. Therefore, $B = (B \\cap A) \\cup (B \\cap A^c)$.\n",
    "\n",
    "### 3. $B \\setminus A = B \\cap A^c$\n",
    "\n",
    "**Proof:**\n",
    "\n",
    "To prove this, we need to show that any element $x$ in $B \\setminus A$ is also in $B \\cap A^c$, and vice versa.\n",
    "\n",
    "If $x \\in B \\setminus A$, then $x \\in B$ and $x \\notin A$. This means that $x$ is in $B$ ($B$) and not in $A$ ($A^c$), so $x \\in B \\cap A^c$.\n",
    "\n",
    "If $x \\in B \\cap A^c$, then $x \\in B$ and $x \\notin A$. This means that $x$ is in $B$ ($B$) and not in $A$ ($A^c$), so $x \\in B \\setminus A$.\n",
    "\n",
    "Therefore, $B \\setminus A = B \\cap A^c$.\n",
    "\n",
    "### 4. $A \\cup B = A \\cup (B \\cap A^c)$\n",
    "\n",
    "**Proof:**\n",
    "\n",
    "This can be proven using the distributive law of set theory.\n",
    "\n",
    "We know that $A \\cup (B \\cap A^c)$ is the union of two sets: one containing elements in both $A$ and $B$, and the other containing elements in $B$ that are not in $A$.\n",
    "\n",
    "Any element in $A \\cup B$ is either in $A$ or in $B$. So, it covers all elements in $A \\cup B$. Therefore, $A \\cup B = A \\cup (B \\cap A^c)$.\n",
    "\n",
    "### 5. $\\left(\\bigcup_{i=1}^{\\infty} A_i^c\\right)^c = \\bigcap_{i=1}^{\\infty} A_i$\n",
    "\n",
    "**Proof:**\n",
    "\n",
    "Let $x$ be an element in $\\left(\\bigcup_{i=1}^{\\infty} A_i^c\\right)^c$. This means $x$ is not in the complement of the union of $A_i^c$ for all $i$, which implies that $x$ is in at least one of the $A_i$ (since $A_i = (A_i^c)^c$). Therefore, $x$ is in the intersection of all $A_i$.\n",
    "\n",
    "Now, let $x$ be an element in $\\bigcap_{i=1}^{\\infty} A_i$. This means $x$ is in every $A_i$, and hence, it is not in the complement of any $A_i$, i.e., $x$ is not in $\\bigcup_{i=1}^{\\infty} A_i^c$. Therefore, $x$ is in the complement of the union of $A_i^c$, and thus, $x$ is in $\\left(\\bigcup_{i=1}^{\\infty} A_i^c\\right)^c$.\n",
    "\n",
    "Therefore, $\\left(\\bigcup_{i=1}^{\\infty} A_i^c\\right)^c = \\bigcap_{i=1}^{\\infty} A_i$.\n",
    "\n",
    "### 6. $|A \\cup B| = |A| + |B| - |A \\cap B|$\n",
    "\n",
    "**Proof:**\n",
    "\n",
    "We can prove this using the principle of Inclusion-Exclusion.\n",
    "\n",
    "The principle of Inclusion-Exclusion states that for two sets $A$ and $B$:\n",
    "\\[\n",
    "$|A \\cup B| = |A| + |B| - |A \\cap B|$\n",
    "\\]\n",
    "\n",
    "This principle can be extended to more than two sets as follows:\n",
    "\\[\n",
    "$|A_1 \\cup A_2 \\cup \\ldots \\cup A_n| = \\sum_{k=1}^{n} |A_k| - \\sum_{1 \\leq i < j \\leq n} |A_i \\cap A_j| + \\sum_{1 \\leq i < j < k \\leq n} |A_i \\cap A_j \\cap A_k| - \\ldots + (-1)^{n-1} |A_1 \\cap A_2 \\cap \\ldots \\cap A_n|$\n",
    "\\]\n",
    "\n",
    "In our case, with two sets $A$ and $B$, we get:\n",
    "\\[\n",
    "$|A \\cup B| = |A| + |B| - |A \\cap B|$\n",
    "\\]\n",
    "\n",
    "So, $|A \\cup B| = |A| + |B| - |A \\cap B|$ is proven.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa60c143-71cb-426b-bd20-e1f675d3ab44",
   "metadata": {},
   "source": [
    "# 2. Sets and Subsets"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "500dfd40-74c7-451d-80cd-6ee9ca479db7",
   "metadata": {},
   "source": [
    "Problem 1: Is A ⊆ B?\n",
    "\n",
    "Given:\n",
    "\n",
    "A = {2, 3, 4, 5}\n",
    "B = {$x \\in \\mathbb{N} | x$ is even}\n",
    "We want to determine if A is a subset of B, i.e., if A ⊆ B.\n",
    "\n",
    "Solution:\n",
    "To prove that A is a subset of B (A ⊆ B), we need to show that every element of A is also an element of B.\n",
    "\n",
    "A = {2, 3, 4, 5}\n",
    "B = {$x \\in \\mathbb{N} | x$ is even} = {2, 4, 6, 8, ...}\n",
    "\n",
    "Every element in set A (2, 3, 4, 5) is also present in set B (2, 4, 6, 8, ...). Therefore, A is indeed a subset of B.\n",
    "\n",
    "Problem 2: Finding Set X\n",
    "\n",
    "Given sets:\n",
    "\n",
    "A = {$x | x \\in \\mathbb{Z}, 0 \\leq x \\leq 9$}\n",
    "B = {2, 4, 6, 8}\n",
    "C = {1, 3, 5, 7, 9}\n",
    "D = {3, 4, 5}\n",
    "We want to find a set X that satisfies the following conditions:\n",
    "\n",
    "X and B are disjoint (X ∩ B = ∅).\n",
    "X is a subset of D (X ⊆ D) but not a subset of B (X ⊆ B).\n",
    "X is a subset of A (X ⊆ A) but not a subset of C (X ⊆ C).\n",
    "Solution:\n",
    "Let's construct set X that satisfies these conditions:\n",
    "\n",
    "To ensure X and B are disjoint, we can select elements from A that are not in B:\n",
    "X = A - B = {$x | x \\in \\mathbb{Z}, 0 \\leq x \\leq 9$, and x is not even} = {1, 3, 5, 7, 9}\n",
    "\n",
    "X is a subset of D but not B:\n",
    "X ⊆ D = {3, 4, 5}\n",
    "X is not a subset of B because X contains odd numbers, which are not in B.\n",
    "\n",
    "X is a subset of A but not C:\n",
    "X ⊆ A = {$x | x \\in \\mathbb{Z}, 0 \\leq x \\leq 9$, and x is not even} = {1, 3, 5, 7, 9}\n",
    "X is not a subset of C because it contains elements that are not in C.\n",
    "\n",
    "Hence, set X = {1, 3, 5, 7, 9} satisfies all the given conditions."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c4a152d-00e3-4486-9eeb-ab48ff7acd7a",
   "metadata": {},
   "source": [
    "# 3. Set Operations"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2c67ec8-a993-4897-a903-77ff0bef111a",
   "metadata": {},
   "source": [
    "# Manual Solutions using LaTeX"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b45c1510-c38f-4b2c-a2ea-406f59a4a347",
   "metadata": {},
   "source": [
    "Problem 1: $C \\oplus D$ (Symmetric Difference)\n",
    "Manual Solution:\n",
    "To find the symmetric difference of sets $C$ and $D$, we calculate $(C \\setminus D) \\cup (D \\setminus C)$.\n",
    "\n",
    "$C \\setminus D$ includes all elements that are in $C$ but not in $D$. So, $C \\setminus D = {6, 8}$.\n",
    "\n",
    "$D \\setminus C$ includes all elements that are in $D$ but not in $C$. So, $D \\setminus C = {1, 3}$.\n",
    "\n",
    "Now, we take the union of these two sets: ${6, 8} \\cup {1, 3} = {1, 3, 6, 8}$.\n",
    "\n",
    "Hence, $C \\oplus D = {1, 3, 6, 8}$.\n",
    "\n",
    "Problem 2: $A \\backslash B$ (Set Difference)\n",
    "Manual Solution:\n",
    "To find the set difference of sets $A$ and $B$, we calculate $A \\setminus B$.\n",
    "\n",
    "$A \\setminus B$ includes all elements that are in $A$ but not in $B$.\n",
    "\n",
    "$A = {1, 2, 3, 4, 5}$\n",
    "\n",
    "$B = {4, 5, 6, 7}$\n",
    "\n",
    "$A \\setminus B = {1, 2, 3}$\n",
    "\n",
    "Hence, $A \\backslash B = {1, 2, 3}$.\n",
    "\n",
    "Problem 3: $B \\backslash A$ (Set Difference)\n",
    "Manual Solution:\n",
    "To find the set difference of sets $B$ and $A$, we calculate $B \\setminus A$.\n",
    "\n",
    "$B \\setminus A$ includes all elements that are in $B$ but not in $A$.\n",
    "\n",
    "$B = {4, 5, 6, 7}$\n",
    "\n",
    "$A = {1, 2, 3, 4, 5}$\n",
    "\n",
    "$B \\setminus A = {6, 7}$\n",
    "\n",
    "Hence, $B \\backslash A = {6, 7}$.\n",
    "\n",
    "Problem 4: $E \\oplus F$ (Symmetric Difference)\n",
    "Manual Solution:\n",
    "To find the symmetric difference of sets $E$ and $F$, we calculate $(E \\setminus F) \\cup (F \\setminus E)$.\n",
    "\n",
    "$E \\setminus F$ includes all elements that are in $E$ but not in $F$. So, $E \\setminus F = {2, 4, 6, 8}$.\n",
    "\n",
    "$F \\setminus E$ includes all elements that are in $F$ but not in $E$. So, $F \\setminus E = {1, 9}$.\n",
    "\n",
    "Now, we take the union of these two sets: ${2, 4, 6, 8} \\cup {1, 9} = {1, 2, 4, 6, 8, 9}$.\n",
    "\n",
    "Hence, $E \\oplus F = {1, 2, 4, 6, 8, 9}$."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d5a57d02-f5e6-40a2-bf03-aeb6a84180a3",
   "metadata": {},
   "source": [
    "# Pythonic Solutions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "47e4990d-3cd0-4959-96ea-4fe91f8e194f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Problem 1 Solution: {8, 1, 3, 6}\n",
      "Problem 2 Solution: {1, 2, 3}\n",
      "Problem 3 Solution: {6, 7}\n",
      "Problem 4 Solution: {1, 2, 4, 5, 6, 8, 9}\n"
     ]
    }
   ],
   "source": [
    "# Given Sets\n",
    "C = {5, 6, 7, 8, 9}\n",
    "D = {1, 3, 5, 7, 9}\n",
    "A = {1, 2, 3, 4, 5}\n",
    "B = {4, 5, 6, 7}\n",
    "E = {2, 4, 6, 8}\n",
    "F = {1, 5, 9}\n",
    "\n",
    "# Problem 1: C ⊕ D (Symmetric Difference)\n",
    "problem_1_solution = (C - D) | (D - C)\n",
    "\n",
    "# Problem 2: A \\ B (Set Difference)\n",
    "problem_2_solution = A - B\n",
    "\n",
    "# Problem 3: B \\ A (Set Difference)\n",
    "problem_3_solution = B - A\n",
    "\n",
    "# Problem 4: E ⊕ F (Symmetric Difference)\n",
    "problem_4_solution = (E - F) | (F - E)\n",
    "\n",
    "print(\"Problem 1 Solution:\", problem_1_solution)\n",
    "print(\"Problem 2 Solution:\", problem_2_solution)\n",
    "print(\"Problem 3 Solution:\", problem_3_solution)\n",
    "print(\"Problem 4 Solution:\", problem_4_solution)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "41a1123a-ee01-4586-8302-9bf05d4bf078",
   "metadata": {},
   "source": [
    "# 4. Finite Sets and The Counting Principles"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "9e80178a-dc6d-4ab0-a2e3-f27728f55f81",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of people who read at least one magazine: 108\n",
      "Number of people who read exactly one magazine: 56\n"
     ]
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "from matplotlib_venn import venn3\n",
    "\n",
    "# Given information\n",
    "total_people = 120\n",
    "newsweek = 65\n",
    "times = 45\n",
    "fortune = 42\n",
    "newsweek_and_times = 20\n",
    "newsweek_and_fortune = 25\n",
    "times_and_fortune = 15\n",
    "all_three = 8\n",
    "\n",
    "# Calculate the number of people who read exactly one magazine\n",
    "exactly_one_magazine = (newsweek - newsweek_and_times - newsweek_and_fortune + all_three) + \\\n",
    "                       (times - newsweek_and_times - times_and_fortune + all_three) + \\\n",
    "                       (fortune - newsweek_and_fortune - times_and_fortune + all_three)\n",
    "\n",
    "# Calculate the number of people who read at least one of the three magazines\n",
    "at_least_one_magazine = newsweek + times + fortune - \\\n",
    "                        (newsweek_and_times + newsweek_and_fortune + times_and_fortune) + \\\n",
    "                        2 * all_three\n",
    "\n",
    "# Draw the Venn diagram\n",
    "venn = venn3(subsets=(newsweek - newsweek_and_times - newsweek_and_fortune + all_three,\n",
    "                      times - newsweek_and_times - times_and_fortune + all_three,\n",
    "                      newsweek_and_times - all_three,\n",
    "                      fortune - newsweek_and_fortune - times_and_fortune + all_three,\n",
    "                      newsweek_and_fortune - all_three,\n",
    "                      times_and_fortune - all_three,\n",
    "                      all_three),\n",
    "             set_labels=('Newsweek', 'Times', 'Fortune'))\n",
    "\n",
    "# Display the diagram\n",
    "plt.title(\"Venn Diagram of Magazine Readers\")\n",
    "plt.show()\n",
    "\n",
    "# Print the results\n",
    "print(\"Number of people who read at least one magazine:\", at_least_one_magazine)\n",
    "print(\"Number of people who read exactly one magazine:\", exactly_one_magazine)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "6f80f7cb-9bff-49f4-ad68-cacc7369f7dd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 600x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1. Number of cars with W only: 5\n",
      "2. Number of cars with A only: 4\n",
      "3. Number of cars with R only: 2\n",
      "4. Number of cars with both R and W but not A: 1\n",
      "5. Number of cars with both A and R but not W: 6\n",
      "6. Number of cars with only one of the options: 11\n",
      "7. Number of cars with at least one option: 11\n",
      "8. Number of cars with none of the options: -10\n"
     ]
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "from matplotlib_venn import venn3\n",
    "\n",
    "# Given data\n",
    "total_cars = 25\n",
    "has_air_conditioning = 15\n",
    "has_radio = 12\n",
    "has_power_windows = 11\n",
    "has_air_conditioning_and_power_windows = 5\n",
    "has_air_conditioning_and_radio = 9\n",
    "has_radio_and_power_windows = 4\n",
    "has_all_options = 3\n",
    "\n",
    "# Calculate the number of cars with each combination\n",
    "only_air_conditioning = has_air_conditioning - (has_air_conditioning_and_power_windows + has_air_conditioning_and_radio - has_all_options)\n",
    "only_radio = has_radio - (has_air_conditioning_and_radio + has_radio_and_power_windows - has_all_options)\n",
    "only_power_windows = has_power_windows - (has_air_conditioning_and_power_windows + has_radio_and_power_windows - has_all_options)\n",
    "\n",
    "# Create a Venn diagram\n",
    "plt.figure(figsize=(6, 6))\n",
    "venn = venn3(\n",
    "    subsets=(only_air_conditioning, only_radio, has_air_conditioning_and_radio, only_power_windows,\n",
    "             has_air_conditioning_and_power_windows, has_radio_and_power_windows, has_all_options),\n",
    "    set_labels=(\"A (Air Conditioning)\", \"R (Radio)\", \"W (Power Windows)\")\n",
    ")\n",
    "\n",
    "# Display the Venn diagram\n",
    "plt.title(\"Venn Diagram of Car Options\")\n",
    "plt.show()\n",
    "\n",
    "# Answers to the questions\n",
    "print(f\"1. Number of cars with W only: {only_power_windows}\")\n",
    "print(f\"2. Number of cars with A only: {only_air_conditioning}\")\n",
    "print(f\"3. Number of cars with R only: {only_radio}\")\n",
    "print(f\"4. Number of cars with both R and W but not A: {has_radio_and_power_windows - has_all_options}\")\n",
    "print(f\"5. Number of cars with both A and R but not W: {has_air_conditioning_and_radio - has_all_options}\")\n",
    "print(f\"6. Number of cars with only one of the options: {only_air_conditioning + only_radio + only_power_windows}\")\n",
    "print(f\"7. Number of cars with at least one option: {total_cars - (total_cars - only_air_conditioning - only_radio - only_power_windows)}\")\n",
    "print(f\"8. Number of cars with none of the options: {total_cars - (has_air_conditioning + has_radio + has_power_windows - has_all_options)}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d9af7067-bd76-41b8-80e8-88a3af2120c5",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
